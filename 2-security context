What is the user used to execute the sleep process within the ubuntu-sleeper pod?
Run the command: 
$ kubectl exec ubuntu-sleeper -- whoami
and check the user that is running the container.

--------------------------------------------------------
Edit the pod ubuntu-sleeper to run the sleep process with user ID 1010.
Note: Only make the necessary changes. Do not modify the name or image of the pod.
---
apiVersion: v1
kind: Pod
metadata:
  name: ubuntu-sleeper
  namespace: default
spec:
  securityContext:
    runAsUser: 1010
  containers:
  - command:
    - sleep
    - "4800"
    image: ubuntu
    name: ubuntu-sleeper
    
Then run the command
$ kubectl apply -f <file-name>.yaml 
to create a resource.
NOTE: TO delete the pod faster, you can run kubectl delete pod ubuntu-sleeper --force. 
This can be done for any pod in the lab or the actual exam. It is not recommended to run this in Production, so keep a note of that.

--------------------------------------------------------
A Pod definition file named multi-pod.yaml is given. With what user are the processes in the web container started?
The pod is created with multiple containers and security contexts defined at the Pod and Container level.
---
apiVersion: v1
kind: Pod
metadata:
  name: multi-pod
spec:
  securityContext:
    runAsUser: 1001
  containers:
  -  image: ubuntu
     name: web
     command: ["sleep", "5000"]
     securityContext:
      runAsUser: 1002

  -  image: ubuntu
     name: sidecar
     command: ["sleep", "5000"]
     
     The User ID defined in the securityContext of the container overrides the User ID in the POD.
     
--------------------------------------------------------
With what user are the processes in the sidecar container started?
The pod is created with multiple containers and security contexts defined at the Pod and Container level.

apiVersion: v1
kind: Pod
metadata:
  name: multi-pod
spec:
  securityContext:
    runAsUser: 1001
  containers:
  -  image: ubuntu
     name: web
     command: ["sleep", "5000"]
     securityContext:
      runAsUser: 1002

  -  image: ubuntu
     name: sidecar
     command: ["sleep", "5000"]
     
The User ID defined in the securityContext of the POD is carried over to all the containers in the Pod.


--------------------------------------------------------
Update pod ubuntu-sleeper to run as Root user and with the SYS_TIME capability.
Note: Only make the necessary changes. Do not modify the name of the pod.
Add SYS_TIME capability to the container's Security Context.

---
apiVersion: v1
kind: Pod
metadata:
  name: ubuntu-sleeper
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "4800"
    image: ubuntu
    name: ubuntu-sleeper
    securityContext:
      capabilities:
        add: ["SYS_TIME"]

then run the command 
$ kubectl apply -f <file-name>.yaml 
$ kubectl replace -f <file-name>.yaml --force
to create a pod from given definition file.


--------------------------------------------------------
Now update the pod to also make use of the NET_ADMIN capability.
Note: Only make the necessary changes. Do not modify the name of the pod.
Add NET_ADMIN capability to the container's Security Context.

---
apiVersion: v1
kind: Pod
metadata:
  name: ubuntu-sleeper
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "4800"
    image: ubuntu
    name: ubuntu-sleeper
    securityContext:
      capabilities:
        add: ["SYS_TIME", "NET_ADMIN"]
  
  then run the command kubectl apply -f <file-name>.yaml to create a pod from given definition file.
